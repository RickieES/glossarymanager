/*
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
package net.localizethat.gui;

import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.AbstractAction;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.KeyStroke;
import net.localizethat.Main;
import net.localizethat.gui.tabpanels.AbstractTabPanel;
import net.localizethat.util.gui.JStatusBar;

/**
 * Main Window of Glossary Manager
 * @author rpalomares
 */
public class MainWindow extends javax.swing.JFrame {

    private static final Icon CLOSE_TAB_ICON = new ImageIcon(
            MainWindow.class.getResource("/net/localizethat/resources/close-tab-button.png"));
    private static final Icon CLOSE_TAB_ICON_HOVER = new ImageIcon(
            MainWindow.class.getResource("/net/localizethat/resources/close-tab-button-hover.png"));

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    public JStatusBar getStatusBar() {
        return statusBar;
    }

    public void addTab(JPanel content, String title, int order) {
        // TODO: change addClosableTab to allow order positioning
        addClosableTab(tabPanel, content, title, null);
    }

    public void addTab(AbstractTabPanel content, String title) {
        content.onTabPanelAdded();
        addClosableTab(tabPanel, content, title, null);
    }

    public void removeTab(AbstractTabPanel content) {
        tabPanel.remove(content);
        content.setVisible(false);
        content.onTabPanelRemoved();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkGlossaryAction = new net.localizethat.actions.CheckGlossaryAction();
        glossaryManagerAction = new net.localizethat.actions.GlossaryManagerAction();
        glsEntriesManagerAction = new net.localizethat.actions.GlsEntriesManagerAction();
        importCSVGlossaryAction = new net.localizethat.actions.ImportCSVGlossaryAction();
        localeManagerAction = new net.localizethat.actions.LocaleManagerAction();
        statusBar = new net.localizethat.util.gui.JStatusBar();
        toolBar = new javax.swing.JToolBar();
        localeButton = new javax.swing.JButton();
        glossaryButton = new javax.swing.JButton();
        entriesButton = new javax.swing.JButton();
        testerButton = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        tabPanel = new javax.swing.JTabbedPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        localeMenuItem = new javax.swing.JMenuItem();
        glossaryMenuItem = new javax.swing.JMenuItem();
        entriesMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        importMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        preferencesMenuItem = new javax.swing.JMenuItem();
        toolsMenu = new javax.swing.JMenu();
        checkGlossaryMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        FormListener formListener = new FormListener();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Glossary Manager");

        toolBar.setFloatable(false);
        toolBar.setRollover(true);
        toolBar.setToolTipText("");

        localeButton.setAction(localeManagerAction);
        localeButton.setText("L");
        localeButton.setFocusable(false);
        localeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        localeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(localeButton);

        glossaryButton.setAction(glossaryManagerAction);
        glossaryButton.setText("G");
        glossaryButton.setToolTipText("Glossary Manager");
        glossaryButton.setFocusable(false);
        glossaryButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        glossaryButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(glossaryButton);

        entriesButton.setAction(glsEntriesManagerAction);
        entriesButton.setText("E");
        entriesButton.setToolTipText("Glossary Entries Manager");
        entriesButton.setFocusable(false);
        entriesButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        entriesButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(entriesButton);

        testerButton.setAction(checkGlossaryAction);
        testerButton.setText("Check Glossary");
        testerButton.setFocusable(false);
        testerButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        testerButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(testerButton);
        testerButton.getAccessibleContext().setAccessibleDescription("Check Glossary");

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanel)
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
        );

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        localeMenuItem.setAction(localeManagerAction);
        fileMenu.add(localeMenuItem);

        glossaryMenuItem.setAction(glossaryManagerAction);
        glossaryMenuItem.setToolTipText("");
        fileMenu.add(glossaryMenuItem);

        entriesMenuItem.setAction(glsEntriesManagerAction);
        fileMenu.add(entriesMenuItem);
        fileMenu.add(jSeparator1);

        importMenuItem.setAction(importCSVGlossaryAction);
        importMenuItem.setText("Import...");
        fileMenu.add(importMenuItem);
        fileMenu.add(jSeparator2);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(formListener);
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        preferencesMenuItem.setMnemonic('P');
        preferencesMenuItem.setText("Preferences");
        editMenu.add(preferencesMenuItem);

        menuBar.add(editMenu);

        toolsMenu.setMnemonic('T');
        toolsMenu.setText("Tools");

        checkGlossaryMenuItem.setAction(checkGlossaryAction);
        checkGlossaryMenuItem.setMnemonic('C');
        checkGlossaryMenuItem.setText("Check Glossary");
        toolsMenu.add(checkGlossaryMenuItem);

        menuBar.add(toolsMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusBar, javax.swing.GroupLayout.DEFAULT_SIZE, 980, Short.MAX_VALUE)
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == exitMenuItem) {
                MainWindow.this.exitMenuItemActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        Main.cleanUpResources();
        this.dispose();
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    /**
     * Adds a component to a JTabbedPane with a little "Close tab" button on the right side of the tab.
     *
     * @param tabbedPane the JTabbedPane
     * @param c any JComponent, usually a JPanel
     * @param title the title for the tab
     * @param icon the icon for the tab, if desired
     */
    public void addClosableTab(final JTabbedPane tabbedPane, final JComponent c,
            final String title, final Icon icon) {

        // Add the tab to the pane without any label
        tabbedPane.addTab(null, c);
        int pos = tabbedPane.indexOfComponent(c);

        // Create a FlowLayout that will space things 5px apart
        FlowLayout f = new FlowLayout(FlowLayout.CENTER, 5, 0);

        // Make a small JPanel with the layout and make it non-opaque
        JPanel pnlTab = new JPanel(f);
        pnlTab.setOpaque(false);

        // Add a JLabel with title and the left-side tab icon
        JLabel lblTitle = new JLabel(title);
        lblTitle.setIcon(icon);

        // Create a JButton for the close tab button
        JButton btnClose = new JButton();
        btnClose.setOpaque(false);

        // Configure icon and rollover icon for button
        btnClose.setRolloverIcon(CLOSE_TAB_ICON_HOVER);
        btnClose.setRolloverEnabled(true);
        btnClose.setIcon(CLOSE_TAB_ICON);

        // Set border null so the button doesn't make the tab too big
        btnClose.setBorder(null);

        // Make sure the button can't get focus, otherwise it looks funny
        btnClose.setFocusable(false);

        // Put the panel together
        pnlTab.add(lblTitle);
        pnlTab.add(btnClose);

        // Add a thin border to keep the image below the top edge of the tab
        // when the tab is selected
        pnlTab.setBorder(BorderFactory.createEmptyBorder(2, 0, 0, 0));

        // Now assign the component for the tab
        tabbedPane.setTabComponentAt(pos, pnlTab);

        // Add the listener that removes the tab
        ActionListener listener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // The component parameter must be declared "final" so that it can be
                // referenced in the anonymous listener class like this.
                tabbedPane.remove(c);
                c.setVisible(false);
            }
        };
        btnClose.addActionListener(listener);

        // Optionally bring the new tab to the front
        tabbedPane.setSelectedComponent(c);

    //-------------------------------------------------------------
        // Bonus: Adding a <Ctrl-W> keystroke binding to close the tab
        //-------------------------------------------------------------
        AbstractAction closeTabAction = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                tabbedPane.remove(c);
            }
        };

        // Create a keystroke
        KeyStroke controlW = KeyStroke.getKeyStroke("control W");

    // Get the appropriate input map using the JComponent constants.
        // This one works well when the component is a container.
        InputMap inputMap = c.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);

        // Add the key binding for the keystroke to the action name
        inputMap.put(controlW, "closeTab");

        // Now add a single binding for the action name to the anonymous action
        c.getActionMap().put("closeTab", closeTabAction);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private net.localizethat.actions.CheckGlossaryAction checkGlossaryAction;
    private javax.swing.JMenuItem checkGlossaryMenuItem;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JButton entriesButton;
    private javax.swing.JMenuItem entriesMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JButton glossaryButton;
    private net.localizethat.actions.GlossaryManagerAction glossaryManagerAction;
    private javax.swing.JMenuItem glossaryMenuItem;
    private net.localizethat.actions.GlsEntriesManagerAction glsEntriesManagerAction;
    private javax.swing.JMenu helpMenu;
    private net.localizethat.actions.ImportCSVGlossaryAction importCSVGlossaryAction;
    private javax.swing.JMenuItem importMenuItem;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JButton localeButton;
    private net.localizethat.actions.LocaleManagerAction localeManagerAction;
    private javax.swing.JMenuItem localeMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem preferencesMenuItem;
    private net.localizethat.util.gui.JStatusBar statusBar;
    private javax.swing.JTabbedPane tabPanel;
    private javax.swing.JButton testerButton;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JMenu toolsMenu;
    // End of variables declaration//GEN-END:variables
}
